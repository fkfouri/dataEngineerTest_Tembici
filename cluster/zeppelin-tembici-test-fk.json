{"paragraphs":[{"text":"%pyspark\n#dataFrame de station.csv\ndfs = spark.read.format(\"com.databricks.spark.csv\")\\\n    .option(\"header\",\"true\").option(\"delimiter\",\",\")\\\n    .option(\"inferSchema\", \"true\")\\\n    .load(\"s3://tembici-fk/data//station.csv\") \n    \n#dataFrame de trip.csv\ndft = spark.read.format(\"com.databricks.spark.csv\")\\\n    .option(\"header\",\"true\").option(\"delimiter\",\",\")\\\n    .option(\"inferSchema\", \"true\")\\\n    .load(\"s3://tembici-fk/data//trip.csv\") \n    \n#dataFrame de weather.csv\ndfw = spark.read.csv(\"s3://tembici-fk/data/weather.csv\", header = True, sep = \",\")","user":"anonymous","dateUpdated":"2020-05-03T22:56:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1588541959188_-1611099165","id":"20200503-213919_383428317","dateCreated":"2020-05-03T21:39:19+0000","dateStarted":"2020-05-03T22:56:38+0000","dateFinished":"2020-05-03T22:56:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1219"},{"text":"%pyspark\nfrom pyspark.sql.functions import date_format, to_timestamp, to_date\nfrom pyspark.sql import functions as F\n#conversao de colunas [starttime, stoptime] do tipo String para o tipo timestamp\ndft = dft.withColumn('tripdate', F.date_format(F.to_timestamp('starttime', 'MM/dd/yyyy HH:mm'), 'MM/dd/yyyy'))\\\n         .withColumn('starttime', F.to_timestamp('starttime', 'MM/dd/yyyy HH:mm'))\\\n         .withColumn('stoptime', F.to_timestamp('stoptime', 'MM/dd/yyyy HH:mm'))\n\n# conversao da coluna Date do tipo String para o tipo date, em seguida formatado novamente para o tipo String\n# pois normaliza o formato de data de mês e dia com dois algarismos. (Ex. 1/2/2020 para 01/02/2020)\ndfw = dfw.withColumn(  'Date', F.date_format(F.to_date('Date', 'MM/dd/yyyy'), 'MM/dd/yyyy'))\n","user":"anonymous","dateUpdated":"2020-05-03T22:57:25+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1588541995656_-1285532316","id":"20200503-213955_487528718","dateCreated":"2020-05-03T21:39:55+0000","dateStarted":"2020-05-03T22:57:25+0000","dateFinished":"2020-05-03T22:57:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1220"},{"text":"%pyspark\n#Criação de Views para representação dos DataFrames\ndfs.createOrReplaceTempView(\"station\")\ndft.createOrReplaceTempView(\"trip\")\ndfw.createOrReplaceTempView(\"weather\")","user":"anonymous","dateUpdated":"2020-05-03T22:57:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1588542249945_85431395","id":"20200503-214409_977654294","dateCreated":"2020-05-03T21:44:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1221","dateFinished":"2020-05-03T22:57:49+0000","dateStarted":"2020-05-03T22:57:49+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\ndfOut = spark.sql(\"\"\"\nWITH local as (\n    SELECT station_id, lat, long FROM station\n), --\nmeteorology as (\n    SELECT Date, Events FROM weather\n)\nSELECT t.trip_id, t.bikeid, -- id \n        /********** RELATED TO TRIP TIME *************/\n        t.starttime, t.stoptime,  t.tripduration,\n        CASE WHEN t.tripduration >= 600 THEN\n            'true'\n        ELSE\n            'false'\n        END long_trip,\n        /********** RELATED TO TRIP ORIGIN & DESTIN *************/\n        t.from_station_id, t.from_station_name, lf.lat from_lat, lf.long from_long,--origin\n        t.to_station_id, t.to_station_name, lt.lat to_lat, lt.long to_long, -- destin\n        /********** RELATED TO USER *************/\n        t.usertype, t.gender, t.birthyear,\n        CASE WHEN YEAR(current_date()) - t.birthyear <= 16 THEN 1\n             WHEN YEAR(current_date()) - t.birthyear <= 25 THEN 2\n             WHEN YEAR(current_date()) - t.birthyear <= 50 THEN 3\n             WHEN YEAR(current_date()) - t.birthyear > 50 THEN 4\n        ELSE\n            null\n        END age_range,  \n        /********** RELATED TO WEATHER *************/\n        met.Events weatherDay\n\nFROM trip t, local lf, local lt, meteorology met\nWHERE 1=1\n      AND t.from_station_id = lf.station_id\n      AND t.to_station_id = lt.station_id\n      AND t.tripdate = met.Date\nORDER BY t.starttime\n \"\"\")\n","user":"anonymous","dateUpdated":"2020-05-03T22:58:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1588543550093_1606890051","id":"20200503-220550_1006884627","dateCreated":"2020-05-03T22:05:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1471","dateFinished":"2020-05-03T22:58:15+0000","dateStarted":"2020-05-03T22:58:05+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\n#Exportando Arquivo\n\ndfOut.coalesce(1).write.parquet(\"s3://tembici-fk/output/trips\")","user":"anonymous","dateUpdated":"2020-05-03T23:00:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1588543559359_654718700","id":"20200503-220559_498640855","dateCreated":"2020-05-03T22:05:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1550","dateFinished":"2020-05-03T23:00:51+0000","dateStarted":"2020-05-03T23:00:14+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2020-05-03T23:00:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1588546814190_-1528903109","id":"20200503-230014_224085162","dateCreated":"2020-05-03T23:00:14+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2937"}],"name":"zeppelin-tembici-test-fk","id":"2F99VMZHF","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}